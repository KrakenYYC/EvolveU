class ChildA extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: ['a', 'b' , 'c', 'd', 'e'],
      textvalue : "",
      test:""
    }
    this.handleAddTodoItem = this.handleAddTodoItem.bind(this)
    this.handleChange = this.handleChange.bind(this)
    this.handledelTodoItem = this.handledelTodoItem.bind(this)
  }



  handleChange(e) {
    this.setState({
      textvalue:e.target.value
    })



  }
  handleAddAccount() {
    this.state.value.push(this.state.textvalue)
    this.setState(
      this.state
    )
    this.state
    console.log(this.state.value)
  }



  handledelTodoItem(v){
    for(var i = 0; i < this.state.value.length; i++){
      if(this.state.value[i] == v){
         delete this.state.value[i]
      }
    }
    this.setState({
      value:this.state.value
    })
    console.log(this.state.value)
  }





  render() {
    let { value } = this.state;
    return (
      <div>
        <input type="text"
         placeholder="輸入項目" 
         className="text"
          onChange={ this.handleChange } />

        <button
         className="addbutton"
         onClick={this.handleAddAccount}>
         Add Todo Item</button>


        {value.map((v) => {
          return <div><h1 className="font"><button className="allbutton" onClick={this.handledelTodoItem.bind(this, v)}>DelTodoItem</button>{v}</h1></div>
          
        })}
      </div>
    )
  }
}
class Container extends React.Component {
  render() {
    return (
      <ChildA 
      /> 
    )
  }
}

ReactDOM.render(<ChildA />, document.getElementById('app'));




onChange(event){
    var newArray = this.state.arr.slice();    
    newArray.push("new value");   
    this.setState({arr:newArray})
}












class MyComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      showComponent: false,
    };
    this._onButtonClick = this._onButtonClick.bind(this);
  }

  _onButtonClick() {
    this.setState({
      showComponent: true,
    });
  }

  render() {
    return (
      <div>
        <Button onClick={this._onButtonClick}>Button</Button>
        {this.state.showComponent ?
           <NewComponent /> :
           null
        }
      </div>
    );
  }
}